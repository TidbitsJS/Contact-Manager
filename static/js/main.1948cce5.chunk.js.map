{"version":3,"sources":["context.js","components/contact/Contact.js","components/contact/Contacts.js","components/layout/TextInputGroup.js","components/contact/AddContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contact/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","newContacts","JSON","parse","stringify","contacts","splice","payload","console","log","window","localStorage","setItem","index","Provider","dispatch","setState","getItem","this","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","contact","name","username","email","phone","website","className","style","textAlign","userSelect","marginLeft","marginTop","paddingRight","marginBottom","cursor","onClick","float","color","bind","to","marginRight","Contacts","Fragment","map","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","preventDefault","history","push","onFieldChange","target","display","justifyContent","alignItems","Header","branding","paddingLeft","padding","href","Test","title","body","fetch","then","response","json","data","EditContact","updateContact","id","match","params","editContact","App","outline","exact","path","component","About","NotFound","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1948cce5.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst Context = React.createContext()\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'DELETE_CONTACT' :\n      let newContacts = JSON.parse(JSON.stringify(state.contacts))\n      newContacts.splice(action.payload, 1)\n      console.log('DELETE_CONTACT', newContacts, action.payload);\n      window.localStorage.setItem('contacts', JSON.stringify(newContacts))\n      return {\n        ...state,\n        contacts: newContacts\n      }\n\n     case 'ADD_CONTACT' :\n       let contacts = [action.payload, ...state.contacts]\n       window.localStorage.setItem('contacts', JSON.stringify(contacts))\n       return {\n          ...state,\n          contacts : contacts\n        }\n\n      case 'UPDATE_CONTACT' :\n         state.contacts[action.payload.index] = action.payload\n         window.localStorage.setItem('contacts', JSON.stringify(state.contacts))\n         return {\n           ...state,\n           contacts : state.contacts\n         }\n\n     default :\n      return state\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n      contacts: [],\n      dispatch: action => {\n        this.setState(state => reducer(state, action))\n      }\n    }\n\n    async componentDidMount() {\n      let contacts = window.localStorage.getItem('contacts')\n      if (contacts) contacts = JSON.parse(contacts)\n      if (!contacts) contacts = []\n\n      this.setState({contacts: contacts})\n    }\n\n    render() {\n      return (\n        <Context.Provider value = {this.state}>\n            {this.props.children}\n        </Context.Provider>\n      )\n    }\n}\n\nexport const Consumer = Context.Consumer\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { Consumer } from 'context.js'\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  }\n\n  onShowClick = (e) => {\n    console.log(this.state);\n    this.setState({\n      showContactInfo: !this.state.showContactInfo\n    })\n  }\n\n   onDeleteClick = async (index, dispatch) => {\n\n    dispatch({type: 'DELETE_CONTACT', payload: index})\n\n  }\n\n  render() {\n    const { name, username, email, phone, website } = this.props.contact\n    const { index } = this.props\n    const { showContactInfo } = this.state\n\n    return (\n\n      <Consumer>\n        {value => {\n          const { dispatch } = value\n          return(\n            <div className=\"card card-body mb-3\">\n              <h4 style={{textAlign:'start', userSelect:'none'}}>\n                <i\n                  className=\"fas fa fa-user\"\n                  style={{marginLeft: '1rem', marginTop: 12, paddingRight:'1rem', marginBottom:5, cursor:'pointer'}}\n                  onClick={this.onShowClick}></i>\n                  {name}\n\n                  <i className=\"fa fa-times\"\n                     style={{cursor:'pointer', float:'right', color:'red', marginTop: 12}}\n                     onClick={this.onDeleteClick.bind(this, index, dispatch)}></i>\n\n                  <Link to={`contact/edit/${index}`}>\n                      <i className=\"fa fa-pencil\"\n                         style={{cursor:'pointer', float:'right', color:'black', marginTop: 12, marginRight:'2rem'}}></i>\n                  </Link>\n                </h4>\n                {showContactInfo ? (\n                  <ul className=\"list-group\" style={{marginTop: 10}}>\n                    <li className=\"list-group-item\">Username : {username}</li>\n                    <li className=\"list-group-item\">Email : {email}</li>\n                    <li className=\"list-group-item\">Phone : {phone}</li>\n                    <li className=\"list-group-item\">Website : {website}</li>\n                  </ul>\n                ) : null}\n\n            </div>\n          )\n        }}\n      </Consumer>\n\n    )\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n}\n\nexport default Contact\n","import React, { Component } from 'react'\nimport { Consumer } from 'context.js'\nimport Contact from './Contact'\n\nclass Contacts extends Component {\n\n  render() {\n\n    return(\n      <Consumer>\n        {value => {\n          const { contacts } = value\n          return(\n            <React.Fragment>\n            <h1 className=\"display-4 mb-2\">\n              <span className=\"text-danger\">Contact</span> List\n            </h1>\n              {contacts.map((contact, index) => <Contact\n                key={index}\n                index={index}\n                contact={contact} />\n              )}\n            </React.Fragment>\n          )\n        }}\n      </Consumer>\n    )\n\n  }\n}\n\nexport default Contacts\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value = {value}\n        onChange={onChange}\n      />\n      { error && <div className=\"invalid-feedback\">Wrong Pass</div> }\n    </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextInputGroup\n","import React from 'react'\nimport { Consumer } from 'context.js'\nimport TextInputGroup from 'components/layout/TextInputGroup.js'\n\nclass AddContact extends React.Component  {\n  state = {\n     name: '',\n     username: '',\n     email: '',\n     phone: '',\n     website: '',\n     errors: {}\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault()\n    console.log(this.state);\n\n    const { name, username, email, phone, website } = this.state\n\n    if(name === '') {\n      this.setState({\n        errors: {name: 'Name is Required'}\n      })\n      return\n    }\n\n    if(username === '') {\n      this.setState({\n        errors: {username: 'Username is Required'}\n      })\n      return\n    }\n\n    if(email === '') {\n      this.setState({\n        errors: {email: 'Email is Required'}\n      })\n      return\n    }\n\n    if(phone === '') {\n      this.setState({\n        errors: {phone: 'Phone is Required'}\n      })\n      return\n    }\n\n    if(website === '') {\n      this.setState({\n        errors: {website: 'Website is Required'}\n      })\n      return\n    }\n\n    const newContact = {\n      name,\n      username,\n      email,\n      phone,\n      website\n    }\n\n    // const res = await axios.post(`https://jsonplaceholder.typicode.com/users`, newContact)\n    dispatch({type:'ADD_CONTACT', payload: newContact})\n\n    this.setState({\n      name:'',\n      username:'',\n      email:'',\n      phone:'',\n      website:'',\n      errors: {}\n    })\n\n    this.props.history.push('/')\n  }\n\n  onFieldChange = e => this.setState({ [e.target.name]: e.target.value })\n\n  render() {\n    const { name, username, email, phone, website, errors } = this.state\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                      label=\"Name\"\n                      name=\"name\"\n                      placeholder=\"Enter Name\"\n                      value={name}\n                      onChange={this.onFieldChange}\n                      error={errors.name}\n                   />\n                   <TextInputGroup\n                       label=\"Username\"\n                       name=\"username\"\n                       placeholder=\"Enter Username\"\n                       value={username}\n                       onChange={this.onFieldChange}\n                       error={errors.username}\n                    />\n                   <TextInputGroup\n                       label=\"Email\"\n                       name=\"email\"\n                       type=\"email\"\n                       placeholder=\"Enter Email\"\n                       value={email}\n                       onChange={this.onFieldChange}\n                       error={errors.email}\n                    />\n                    <TextInputGroup\n                        label=\"Phone\"\n                        name=\"phone\"\n                        placeholder=\"Enter Phone\"\n                        value={phone}\n                        onChange={this.onFieldChange}\n                        error={errors.phone}\n                     />\n                     <TextInputGroup\n                         label=\"Website\"\n                         name=\"website\"\n                         placeholder=\"Enter Website\"\n                         value={website}\n                         onChange={this.onFieldChange}\n                         error={errors.website}\n                      />\n                  <div style={{display:'flex', justifyContent:'center', alignItems:'center', textAlign:'center'}}>\n                    <input\n                      type=\"submit\"\n                      value=\"Add Contact\"\n                      className=\"btn btn-outline-primary\"\n                    />\n                  </div>\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst Header = props => {\n  const { branding } = props\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-4 py-100\" style={{paddingLeft:'0px'}}>\n      <div className=\"container\" style={{padding: '0px'}}>\n        <a href=\"/\" className=\"navbar-brand\"> {branding} </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\" style={{marginLeft: 10}}>\n              <Link to=\"/\" className=\"nav-link text-dark\">\n                <i className=\"fa fa-home\"></i> HOME\n              </Link>\n            </li>\n            <li className=\"nav-item\" style={{marginLeft: 10}}>\n              <Link to=\"/contact/add\" className=\"nav-link text-dark\">\n                <i className=\"fa fa-plus-circle\"></i>  ADD\n              </Link>\n            </li>\n            <li className=\"nav-item\" style={{marginLeft: 10}}>\n              <Link to=\"/about\" className=\"nav-link text-dark\">\n                <i className=\"fa fa-heart\"></i>  ABOUT\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nHeader.defaultProps = {\n  branding : 'My App'\n}\n\nHeader.propTypes = {\n  branding : PropTypes.string.isRequired\n}\n\nexport default Header\n","import React from 'react'\n\nexport default () => {\n  return(\n    <div style={{userSelect:'none'}}>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.2.0</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div style={{userSelect:\"none\"}}>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Weird Things Happen 😂😅</p>\n      <p>Try to get along with that 😁</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nclass Test extends React.Component {\n  state = {\n    title: '',\n    body: '0'\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n    .then(response => response.json())\n    .then(data => {\n      this.setState({\n        title: data.title,\n        body: data.body\n      })\n      console.log(data);\n    })\n\n  }\n\n  // componentWillMount() {\n  //   console.log(\"componentWillMount\");\n  // }\n  //\n  // componentDidUpdate() {\n  //   console.log(\"componentDidUpdate\");\n  // }\n  //\n  // componentWillUpdate() {\n  //   console.log(\"componentWillUpdate\");\n  // }\n  //\n  // componentWillReceiveProps(nextprops, nextstate) {\n  //   console.log(\"componentWillReceiveProps\");\n  // }\n  //\n  // static getDerivedStateFromProps(nextprops, prevState) {\n  //   return null\n  // }\n  //\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('getSnapshotBeforeUpdate');\n  // }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.state.title}</h1>\n        <p>{this.state.body}</p>\n      </div>\n    )\n  }\n}\n\nexport default Test\n","import React from 'react'\nimport { Consumer } from 'context.js'\nimport TextInputGroup from 'components/layout/TextInputGroup.js'\n\nclass EditContact extends React.Component  {\n  state = {\n     name: '',\n     username: '',\n     email: '',\n     phone: '',\n     website: '',\n     errors: {}\n  }\n\n  async componentDidMount() {\n    const { id } = this.props.match.params\n\n    let contacts = window.localStorage.getItem('contacts')\n    if (contacts) contacts = JSON.parse(contacts)\n    if (!contacts) contacts = []\n\n    console.log('contacts', contacts);\n    const editContact = contacts[id]\n    console.log(editContact);\n\n    this.setState({\n      name: editContact.name,\n      username: editContact.username,\n      email: editContact.email,\n      phone: editContact.phone,\n      website: editContact.website\n    })\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault()\n    console.log(this.state);\n\n    const { name, username, email, phone, website } = this.state\n\n    if(name === '') {\n      this.setState({\n        errors: {name: 'Name is Required'}\n      })\n      return\n    }\n\n    if(username === '') {\n      this.setState({\n        errors: {username: 'Username is Required'}\n      })\n      return\n    }\n\n    if(email === '') {\n      this.setState({\n        errors: {email: 'Email is Required'}\n      })\n      return\n    }\n\n    if(phone === '') {\n      this.setState({\n        errors: {phone: 'Phone is Required'}\n      })\n      return\n    }\n\n    if(website === '') {\n      this.setState({\n        errors: {website: 'Website is Required'}\n      })\n      return\n    }\n\n    var updateContact = {\n      name,\n      username,\n      email,\n      phone,\n      website\n    }\n\n    let { id } = this.props.match.params\n    updateContact.index = id\n    // const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact)\n\n    dispatch({type:'UPDATE_CONTACT', payload: updateContact})\n\n    this.setState({\n      name:'',\n      username:'',\n      email:'',\n      phone:'',\n      website: '',\n      errors: {}\n    })\n\n    this.props.history.push('/')\n  }\n\n  onFieldChange = e => this.setState({ [e.target.name]: e.target.value })\n\n  render() {\n    const { name, username, email, phone, website, errors } = this.state\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                      label=\"Name\"\n                      name=\"name\"\n                      placeholder=\"Enter Name\"\n                      value={name}\n                      onChange={this.onFieldChange}\n                      error={errors.name}\n                   />\n                   <TextInputGroup\n                       label=\"Username\"\n                       name=\"username\"\n                       placeholder=\"Enter Username\"\n                       value={username}\n                       onChange={this.onFieldChange}\n                       error={errors.username}\n                    />\n                   <TextInputGroup\n                       label=\"Email\"\n                       name=\"email\"\n                       type=\"email\"\n                       placeholder=\"Enter Email\"\n                       value={email}\n                       onChange={this.onFieldChange}\n                       error={errors.email}\n                    />\n                    <TextInputGroup\n                        label=\"Phone\"\n                        name=\"phone\"\n                        placeholder=\"Enter Phone\"\n                        value={phone}\n                        onChange={this.onFieldChange}\n                        error={errors.phone}\n                     />\n                     <TextInputGroup\n                         label=\"Website\"\n                         name=\"website\"\n                         placeholder=\"Enter Website\"\n                         value={website}\n                         onChange={this.onFieldChange}\n                         error={errors.website}\n                      />\n                  <div style={{display:'flex', justifyContent:'center', alignItems:'center', textAlign:'center'}}>\n                    <input\n                      type=\"submit\"\n                      value=\"Update\"\n                      className=\"btn btn-outline-primary\"\n                    />\n                  </div>\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact\n","import React, { Component } from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Contacts from 'components/contact/Contacts.js'\nimport AddContact from 'components/contact/AddContact.js'\nimport Header from 'components/layout/Header.js'\nimport About from 'components/pages/About.js'\nimport NotFound from 'components/pages/NotFound.js'\nimport Test from 'components/test/Test.js'\nimport EditContact from 'components/contact/EditContact.js'\nimport { Provider } from 'context.js'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n        <div className=\"App\" style={{outline:'none'}}>\n          <Header branding=\"Contact Manager\"/>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component = {Contacts} />\n              <Route exact path=\"/contact/add\" component = {AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component = {EditContact} />\n              <Route exact path=\"/about\" component = {About} />\n              <Route exact path=\"/test\" component = {Test} />\n              <Route component = {NotFound}></Route>\n            </Switch>\n          </div>\n        </div>\n       </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}